public class TSP {
    static int V = 4; // Number of cities
    static int[][] graph = {
        {0, 10, 15, 20},
        {10, 0, 35, 25},
        {15, 35, 0, 30},
        {20, 25, 30, 0}
    };
    
    static boolean[] visited = new boolean[V];
    static int minCost = Integer.MAX_VALUE;

    static void tsp(int pos, int count, int cost, int start) {
        if (count == V && graph[pos][start] > 0) {
            minCost = Math.min(minCost, cost + graph[pos][start]);
            return;
        }

        for (int city = 0; city < V; city++) {
            if (!visited[city] && graph[pos][city] > 0) {
                visited[city] = true;
                tsp(city, count + 1, cost + graph[pos][city], start);
                visited[city] = false;
            }
        }
    }

    public static void main(String[] args) {
        visited[0] = true; // Start from city 0 (A)
        tsp(0, 1, 0, 0);
        System.out.println("Minimum cost to complete TSP tour: " + minCost);
    }
}
